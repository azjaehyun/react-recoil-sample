{"ast":null,"code":"var _jsxFileName = \"/Users/jaehyun/workspace/myproject/react-recoil-sample/src/component/CharacterCount.js\",\n    _s = $RefreshSig$();\n\nimport { atom, selector, useRecoilValue } from 'recoil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst textState = atom({\n  key: 'textState',\n  // unique ID (with respect to other atoms/selectors)\n  default: '' // default value (aka initial value)\n\n});\nconst charCountState = selector({\n  key: 'charCountState',\n  // unique ID (with respect to other atoms/selectors)\n  get: _ref => {\n    let {\n      get\n    } = _ref;\n    const text = get(textState);\n    return text.length;\n  }\n});\n\nfunction CharacterCount() {\n  _s();\n\n  const count = useRecoilValue(charCountState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BlueColor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"component - 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 39\n    }, this), \"Character Count: \", count]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n}\n\n_s(CharacterCount, \"h7IrvKR9DxGiGl6XcEa6dZeZPaU=\", false, function () {\n  return [useRecoilValue];\n});\n\n_c = CharacterCount;\nexport default CharacterCount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterCount\");","map":{"version":3,"sources":["/Users/jaehyun/workspace/myproject/react-recoil-sample/src/component/CharacterCount.js"],"names":["atom","selector","useRecoilValue","textState","key","default","charCountState","get","text","length","CharacterCount","count"],"mappings":";;;AAAA,SACIA,IADJ,EAEIC,QAFJ,EAGIC,cAHJ,QAIO,QAJP;;AAKA,MAAMC,SAAS,GAAGH,IAAI,CAAC;AACnBI,EAAAA,GAAG,EAAE,WADc;AACD;AAClBC,EAAAA,OAAO,EAAE,EAFU,CAEN;;AAFM,CAAD,CAAtB;AAIA,MAAMC,cAAc,GAAGL,QAAQ,CAAC;AAC5BG,EAAAA,GAAG,EAAE,gBADuB;AACL;AACvBG,EAAAA,GAAG,EAAE,QAAW;AAAA,QAAV;AAACA,MAAAA;AAAD,KAAU;AACd,UAAMC,IAAI,GAAGD,GAAG,CAACJ,SAAD,CAAhB;AAEA,WAAOK,IAAI,CAACC,MAAZ;AACD;AAN2B,CAAD,CAA/B;;AAQA,SAASC,cAAT,GAA0B;AAAA;;AACtB,QAAMC,KAAK,GAAGT,cAAc,CAACI,cAAD,CAA5B;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA3B,uBAAqEK,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAJMD,c;UACSR,c;;;KADTQ,c;AAKT,eAAeA,cAAf","sourcesContent":["import {\n    atom,\n    selector,\n    useRecoilValue,\n} from 'recoil';\nconst textState = atom({\n    key: 'textState', // unique ID (with respect to other atoms/selectors)\n    default: '', // default value (aka initial value)\n  });\nconst charCountState = selector({\n    key: 'charCountState', // unique ID (with respect to other atoms/selectors)\n    get: ({get}) => {\n      const text = get(textState);\n  \n      return text.length;\n    },\n  });\nfunction CharacterCount() {\n    const count = useRecoilValue(charCountState);\n  \n    return <div className='BlueColor'><div>component - 2</div>Character Count: {count}</div>;\n  } \nexport default CharacterCount;  "]},"metadata":{},"sourceType":"module"}